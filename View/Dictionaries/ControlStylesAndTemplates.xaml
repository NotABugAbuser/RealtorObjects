<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    xmlns:c="clr-namespace:RealtorObjects.View.Converters"
                    xmlns:local="clr-namespace:RealtorObjects">
    <c:ObjectAndPropertyMultiValueConverter x:Key="ObjectAndProperty"/>
    <Style x:Key="ShadowBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="Background" Value="white"/>
    </Style>
    <Style TargetType="CheckBox" x:Key="OptionCheckBox">
        <Setter Property="Foreground" Value="{StaticResource GreenFont}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="Header">
        <Setter Property="Foreground" Value="{StaticResource GreenFont}"/>
        <Setter Property="Margin" Value="3,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle 
                        Margin="2" 
                        StrokeDashArray="1 2" 
                        SnapsToDevicePixels="true" 
                        StrokeThickness="1" 
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MaxLength" Value="30"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer 
                        x:Name="PART_ContentHost" 
                        Background="Transparent" 
                        Focusable="false" 
                        HorizontalScrollBarVisibility="Hidden" 
                        VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border 
                            x:Name="templateRoot" 
                            Background="white" 
                            BorderThickness="1" 
                            BorderBrush="{StaticResource BorderGray}" 
                            SnapsToDevicePixels="true"/>
                        <Border 
                            x:Name="splitBorder"  
                            Margin="2" 
                            HorizontalAlignment="Right" 
                            Width="16">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Background" Value="{StaticResource MainGreen}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource LightMainGreen}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Polygon
                                HorizontalAlignment="Center"
                                IsHitTestVisible="False"
                                Fill="white"
                                Width="6"
                                Height="3"
                                Points="0,0 3,3 6,0"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate 
        x:Key="ComboBoxEditableTemplate" 
        TargetType="{x:Type ComboBox}">
        <Grid 
            x:Name="templateRoot" 
            SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition 
                    MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" 
                    Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup 
                x:Name="PART_Popup" 
                AllowsTransparency="true" 
                Grid.ColumnSpan="2" 
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                Placement="Bottom" 
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Themes:SystemDropShadowChrome 
                    x:Name="shadow" Color="Transparent" 
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border 
                        x:Name="dropDownBorder" 
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
                        BorderThickness="1" 
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid 
                                x:Name="grid" 
                                RenderOptions.ClearTypeHint="Enabled">
                                <Canvas 
                                    x:Name="canvas" 
                                    HorizontalAlignment="Left" 
                                    Height="0" 
                                    VerticalAlignment="Top" 
                                    Width="0">
                                    <Rectangle 
                                        x:Name="opaqueRect" 
                                        Fill="{Binding Background, ElementName=dropDownBorder}" 
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter 
                                    x:Name="ItemsPresenter" 
                                    KeyboardNavigation.DirectionalNavigation="Contained" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton 
                x:Name="toggleButton" 
                Background="{TemplateBinding Background}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                Grid.ColumnSpan="2" 
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                Style="{StaticResource ComboBoxToggleButton}"/>
            <Border x:Name="border" Background="White" Margin="{TemplateBinding BorderThickness}">
                <TextBox 
                    x:Name="PART_EditableTextBox" 
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" 
                    Margin="{TemplateBinding Padding}" 
                    Style="{StaticResource ComboBoxEditableTextBox}" 
                    IsHitTestVisible="{TemplateBinding IsEditable}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="GreenComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
    </Style>
    <Style TargetType="RepeatButton" x:Key="PART_RepeatButtonStyle">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Background" Value="{StaticResource MainGreen}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightMainGreen}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Polygon" x:Key="WhiteArrowStyle">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Fill" Value="White"/>
        <Setter Property="Width" Value="6"/>
        <Setter Property="Height" Value="3"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="TextBox" x:Key="DoubleNumericUpDown">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border 
                        BorderThickness="1" 
                        BorderBrush="{StaticResource BorderGray}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="18"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBox
                                MinWidth="50"
                                BorderThickness="0"
                                Grid.RowSpan="2"
                                HorizontalAlignment="Right"
                                TextAlignment="Right"
                                Text="{Binding Path=Text, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBox}, UpdateSourceTrigger=PropertyChanged}"
                                x:Name="PART_NumericTextBox"
                                Padding="2"/>
                            <RepeatButton 
                                Style="{StaticResource PART_RepeatButtonStyle}"
                                Command="{Binding Path=DataContext.IncreaseDouble, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"
                                Grid.Column="1"
                                Margin="1,1,1,0.5">
                                <RepeatButton.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ObjectAndProperty}">
                                        <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=TextBox, Mode=FindAncestor}"/>
                                        <Binding Path="Tag" RelativeSource="{RelativeSource AncestorType=TextBox, Mode=FindAncestor}"/>
                                    </MultiBinding>
                                </RepeatButton.CommandParameter>
                                <Polygon
                                    Style="{StaticResource WhiteArrowStyle}"
                                    Points="0,3,3,0,6,3"/>
                            </RepeatButton>
                            <RepeatButton 
                                Style="{StaticResource PART_RepeatButtonStyle}"
                                Grid.Column="1"
                                Grid.Row="1"
                                Command="{Binding Path=DataContext.DecreaseDouble, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"
                                Margin="1,0.5,1,1">
                                <RepeatButton.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ObjectAndProperty}">
                                        <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=TextBox, Mode=FindAncestor}"/>
                                        <Binding Path="Tag" RelativeSource="{RelativeSource AncestorType=TextBox, Mode=FindAncestor}"/>
                                    </MultiBinding>
                                </RepeatButton.CommandParameter>
                                <Polygon
                                    Margin="0,1,0,0"
                                    Style="{StaticResource WhiteArrowStyle}"
                                    Points="0,0 3,3 6,0"/>
                            </RepeatButton>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox" x:Key="IntegerNumericUpDown">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border 
                        BorderThickness="1" 
                        BorderBrush="{StaticResource BorderGray}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="18"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBox
                                MinWidth="50"
                                BorderThickness="0"
                                Grid.RowSpan="2"
                                HorizontalAlignment="Right"
                                TextAlignment="Right"
                                Text="{Binding Path=Text, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBox}, UpdateSourceTrigger=PropertyChanged}"
                                x:Name="PART_NumericTextBox"
                                Padding="2"/>
                            <RepeatButton 
                                    Style="{StaticResource PART_RepeatButtonStyle}"
                                    Command="{Binding Path=DataContext.IncreaseInteger, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"
                                    Grid.Column="1"
                                    Name="PART_IncreaseValue"
                                    Margin="1,1,1,0.5">
                                <RepeatButton.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ObjectAndProperty}">
                                        <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=TextBox, Mode=FindAncestor}"/>
                                        <Binding Path="Tag" RelativeSource="{RelativeSource AncestorType=TextBox, Mode=FindAncestor}"/>
                                    </MultiBinding>
                                </RepeatButton.CommandParameter>
                                <Polygon
                                        Style="{StaticResource WhiteArrowStyle}"
                                        Points="0,3,3,0,6,3"/>
                            </RepeatButton>
                            <RepeatButton
                                    Style="{StaticResource PART_RepeatButtonStyle}"
                                    Grid.Column="1"
                                    Grid.Row="1"
                                    Name="PART_DecreaseValue"
                                    Command="{Binding Path=DataContext.DecreaseInteger, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"
                                    Margin="1,0.5,1,1">
                                <RepeatButton.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ObjectAndProperty}">
                                        <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=TextBox, Mode=FindAncestor}"/>
                                        <Binding Path="Tag" RelativeSource="{RelativeSource AncestorType=TextBox, Mode=FindAncestor}"/>
                                    </MultiBinding>
                                </RepeatButton.CommandParameter>
                                <Polygon
                                        Margin="0,1,0,0"
                                        Style="{StaticResource WhiteArrowStyle}"
                                        Points="0,0 3,3 6,0"/>
                            </RepeatButton>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=PART_IncreaseValue, Path=IsMouseDirectlyOver}" Value="true">
                            <Setter Property="Background" TargetName="PART_IncreaseValue" Value="red"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>